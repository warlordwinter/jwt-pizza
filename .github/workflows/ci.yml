name: CI Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build # Make sure this command generates the dist/ directory

      - name: List dist contents
        run: ls -la dist/ # Verify that dist/ is populated correctly

      - name: set version
        id: set_version
        run: |
          version=$(date +'%Y%m%d.%H%M%S')
          echo "version=$version" >> "$GITHUB_OUTPUT"
          printf '{"version": "%s" }' "$version" > public/version.json

      - name: Update dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: dist/ # Ensure this is the right path

      - name: Run tests
        run: |
          npx playwright install --with-deps chromium
          npx nyc --reporter=json-summary --reporter=text npx playwright test

      - name: Update coverage badge
        run: |
          coverage=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          color=$(echo "$coverage < 80" | bc -l | awk '{if ($1) print "red"; else print "green"}')
          curl -s -X POST "https://badge.cs329.click/badge/${{ github.repository_owner }}/jwtpizzacoverage?label=Coverage&value=$coverage%25&color=$color" \
            -H "authorization: bearer ${{ secrets.FACTORY_API_KEY }}" -o /dev/null

  deploy:
    needs: build
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://pizza.pdfsimplifer.click
    env:
      version: ${{needs.build.outputs.version}}
    steps:
      - name: Create OIDC token to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.CI_IAM_ROLE }}

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist/ # Ensure this matches the artifact name

      - name: Push to AWS S3~
        # Append the version to the path
        run: |
          echo Deploying $version
          aws s3 cp dist s3://${{ secrets.APP_BUCKET }}/$version --recursive
          # Remove this line -> aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"

  release:
    needs:
      - build
      - deploy
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
        env:
          version: ${{needs.build.outputs.version}}
        with:
          tag: version-${{ env.version }}
          name: Version ${{ env.version }}
          body: |
            ## ðŸš€ Changes

            ${{ github.event.head_commit.message }}

            **commit**: ${{ github.sha }}
